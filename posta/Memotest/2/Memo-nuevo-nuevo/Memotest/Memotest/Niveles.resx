<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4AgPERUl09YRoQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPnSURBVHhe
        5ZlLaNRAHMZHu0ndHgTFF6IepAdlk9RaQSqC4EnxgW0y2FpPvk6iqODZg55EwZNQ8CgKQn0rPsCbeBQU
        RL1U0EupW3oSq3b9/9NmN9l8u5vuZl+Zw29pvszMf76vO7N5iFwupzRQVAkoqgQUVQKKKgHFONFsazvS
        WwUoxkWntA5qtvkZnWsVoBgHrnnH/K051jg63ypAsVYK5s2ccgEEzSsWQNi8QgFg84oEUNq8AgGUN88k
        OIDK5pmEBhDNPJPAAKKbZxIWwMLMMwkKYOHmmYQEUJ15l58d0tgnZGY5GrfZQLGYGsz7mSU+Ebc0aRzX
        DxubhRCLUL1GAkU/MZkvRVaX5tOUY16kb8gaVL/eQNGjzuaLmdEc405K9uxEc6kXUGQabD6INN/T5nlC
        HOjrQnOLEyg21XyQKc02r4kBaxWaZxyEhBYy72dSd6yh4rnGQeCgRc3noc1yTAwbq/1zrpX8H61u3sek
        blvDfhO14H60kfk8KWnej2NvaEvzBYwv6SFjPTIWFUHr6h4evF2wxpfY5kZkLgqCrsD0lDQe4cHbA/on
        /tBtcxMyWIm5jwSEQExoA5meYoOVKPyRjBCymm1s8xusRPAgGcvhuxjuW+H3VY6wQCHQVddjNHi7oDvm
        s6i32lhMQAh8i428FQNFJgEh/KGLpX7kzQ8UPRIQwjdxxFyGvHlA0c9cCOYTMHh7YFt3kS8PKBZTYwjT
        xHVilO7tb9PafKBJ8xUdvyX4GeEvAvWLjzI/jVBEVB9C+cfivFunB611tF530USP6Y5xhUJ6SH2z4bGq
        5iWqzUCxFNWFUN17AXFJLNZkZgt9a87NBzIVHjs6KWnthnWQWA6xt7uTn+SiIph4XowIKTs6HGM/hTFG
        486E61TkHRwXiZVYWAjxvxkSsnclLZnzNP7HcL3S0A3TodBYxUJUoodQ31djurQcqvM1XBcgzQ/F/QMH
        CyVaCPUNgBGn+jQyd5rqTYTrB0k5xo5AX/9BNbgh0LU3KjZH/QPwECPdS/kxOtXl13BgLi6jgT7+g2op
        H0LjAvCgHX8P1S71bZgWsj/ttQ11rpbSITQ+AKZrqHct1X8Tno97tzjitQt1rAUcQnMCYPhaQreNy8H5
        uLzOt/F3iIP5EJ4XijUvAA9NWmdpLv59YTYtMxv4HOxQK8EQmh8AQ5vjSZrPv3wItnGGddg4DgohtEYA
        DC2Ho2T+LwfAL1ZYgw3jgkOgAG6ic81iPgT+FmR5j4CN4iTqs7lGojvWVTeEQWsrbJB0+MaKlucLuiq8
        ABuoAD8qo+V5A55UBf4phCdUAooqAUWVgKJKQFEdcuI/ete5iRuCBqwAAAAASUVORK5CYII=
</value>
  </data>
</root>